// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId    Int   @id @default(autoincrement())
  email     String   @unique
  name      String
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Zap {
  id        String @id @default(uuid())
  triggerId  String                  
  trigger    Trigger?
  actionId   String
  actions    Action[]
  ZapRun     ZapRun[]
}

model Trigger {
  id        String @id @default(uuid())
  zapId      String @unique
  triggerId  String       //triggerId is the id of the trigger(webhook id , slack id etc) available trigger id  (33.1 | Zapier part 1 | 1.51h)
  type AvailableTriggers @relation(fields: [triggerId], references: [id])
  zap  Zap               @relation(fields: [zapId], references: [id])
}

model Action{
  id        String      @id @default(uuid())
  zapId      String     
  actionId   String
  zap  Zap               @relation(fields: [zapId], references: [id])
  type AvailableActions  @relation(fields: [actionId], references: [id])
}

model AvailableActions {
  id String @id @default(uuid())
  name              String
  actions Action[]
}

model AvailableTriggers {
  id String @id @default(uuid())
  name               String
  triggers Trigger[]
}

model ZapRun {
  id           String @id @default(uuid())
  zapId        String
  metadata     Json
  zap          Zap @relation(fields: [zapId], references: [id])
  ZapRunOutBox ZapRunOutBox?
}

model ZapRunOutBox {
  id          String @id @default(uuid())
  zapRunId    String @unique
  zapRun      ZapRun @relation(fields: [zapRunId], references: [id])
}

//every zap has a single trigger while a there can be multiple actions
//zapRun is with a one to one relationship with zapOtBox